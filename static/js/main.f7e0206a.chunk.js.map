{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f7e0206a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                {props.aboutText}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          {/* style={`{(${props.mode}==='light') ? (color:'black') : (color:'white')}`} */}\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable {props.mode==='light'?'dark':'light'} mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About Us\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text changed to uppercase!\",\"success\")\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Text changed to lowercase!\",\"success\")\r\n  };\r\n\r\n  const handleClrClick = () => {\r\n    setText(\"\");\r\n    props.showAlert(\"Text cleared!\",\"success\")\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On change\")\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  }\r\n\r\n  const [text, setText] = useState(\"Enter text here\");\r\n  // setText(\"new text here\"); correct way to change text\r\n  return (\r\n    <>\r\n      <div className=\"container\" style={{color:(props.mode==='light')?'black':'white'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"6\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleClrClick}>\r\n          Clear text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>\r\n          Copy text\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color:(props.mode==='light')?'black':'white'}}>\r\n        <h1>Your text summary</h1>\r\n        <p>\r\n          {text.split(\" \").length} words and {text.length} characters.\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minutes to read </p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <>\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import below from react router dom\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#3e3a61\";\n      showAlert(\"Dark mode has been enabled!\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n      // setInterval(()=>{\n      //   document.title = \"Install TextUtils Now\";\n      // },1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"#fcfbf7\";\n      showAlert(\"Light mode has been enabled!\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n  return (\n    <>\n      {/* <Navbar/> */}\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About Text\"/> */}\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* exact path bcz react does partial matching and can return another component from same folder */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About /> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm\n                heading=\"Enter your text to analyze\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}